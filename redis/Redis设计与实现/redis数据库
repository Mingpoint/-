数据库结构：
    struct redisServer{
        int dbnum;//服务器数据库数量，默认16个
        RedisDb[] redisDb;//db数组，每个db代表一个数据库
    }
    在服务器内部，客户端状态redisClient结构的db属性记录了客户端当前的目标数据库，指向具体的redisDb
    struct redisClient {
        RedisDb redisDb;//指向具体的redisdb
    }

    redisDb结构：
    struct redisDb {
        HashMap  hashMap;
    }

过期键的删除策略：
    1.定时删除：在设置键的过期时间的同时，创建一个定时器（Timer），让定时器在键的过期时间来临时，立刻执行删除
    2.惰性删除：放任不管，但是在获取的时候，判断是否过期，过期了删除，否则返回该键
    3.定期删除：每个一段时间对数据库进行一次检查，删除过期键

    在AOF、RDB和复制功能对过期键的处理
    1.生成RDB文件 ：在执行save或者bgsave命令创建一个新的RDB文件时，程序会对数据库中的键进行检查，已过期
        的键不会被保存到新创建的RDB文件中。
    2.载入RDB文件：
        如果服务器以主服务器模式运行，那么在载入RDB文件时，程序会对文件保存的键进行检查，未过期的被载入，否则
            忽略
        如果服务器以从服务器模式运行，那么在载入时，保存所有的键，不论是否过期。不过因为主从服务器在进行数据同步
        的时候，从服务器的数据库就会被清空。
    3.aof文件写入：如果某个键过期了但是还没有被删除，在执行删除的时候，会在aof文件中显示的添加一条del语句。
    4.aof重写：在aof重写过程中，程序会对数据库进行检查，如果已经过期了就不会被保存到aof文件中。
